import pandas as pd
import os

# Utworzenie folderu na pliki CSV
output_dir = "dane_emerytalne"
os.makedirs(output_dir, exist_ok=True)

# 1. Parametry makroekonomiczne - wszystkie warianty
parametry_data = {
    'parametr': ['stopa_bezrobocia']*60 + ['inflacja_ogolna']*60 + ['inflacja_emeryci']*60 +
                ['realny_wzrost_wynagrodzen']*60 + ['realny_wzrost_PKB']*60 + ['sciagalnosc_skladek']*60,
    'wariant': [1]*20 + [2]*20 + [3]*20 + [1]*20 + [2]*20 + [3]*20 + [1]*20 + [2]*20 + [3]*20 +
               [1]*20 + [2]*20 + [3]*20 + [1]*20 + [2]*20 + [3]*20 + [1]*20 + [2]*20 + [3]*20,
    '2022': [5.00]*20 + [5.50]*20 + [4.80]*20 + [113.50]*60 + [113.80]*60 +
            [98.00]*20 + [97.50]*20 + [98.50]*20 + [104.60]*20 + [104.20]*20 + [105.00]*20 + [99.00]*60,
    '2023': [5.40]*20 + [6.00]*20 + [5.00]*20 + [109.80]*60 + [110.10]*60 +
            [100.30]*20 + [99.80]*20 + [100.80]*20 + [101.70]*20 + [101.40]*20 + [102.10]*20 +
            [99.00, 98.00, 99.50]*20,
    '2024': [5.00]*20 + [6.00]*20 + [4.70]*20 + [104.80]*60 + [105.10]*60 +
            [103.40]*20 + [102.90]*20 + [103.70]*20 + [103.10]*20 + [102.80]*20 + [103.30]*20 +
            [99.00, 98.00, 99.50]*20,
    '2025': [5.00]*20 + [6.00]*20 + [4.60]*20 + [103.10]*60 + [103.40]*60 +
            [103.70]*20 + [103.00]*20 + [104.00]*20 + [103.10]*20 + [102.80]*20 + [103.30]*20 +
            [99.00, 98.00, 99.50]*20,
    '2030': [5.00]*20 + [6.00]*20 + [4.20]*20 + [102.50]*60 + [102.80]*60 +
            [102.90]*20 + [102.40]*20 + [103.40]*20 + [102.70]*20 + [102.40]*20 + [103.10]*20 +
            [99.00, 98.00, 99.50]*20,
    '2035': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.80]*20 + [102.30]*20 + [103.30]*20 + [102.40]*20 + [102.00]*20 + [102.80]*20 +
            [99.00, 98.00, 99.50]*20,
    '2040': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.70]*20 + [102.20]*20 + [103.20]*20 + [102.00]*20 + [101.60]*20 + [102.40]*20 +
            [99.00, 98.00, 99.50]*20,
    '2050': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.50]*20 + [101.90]*20 + [103.10]*20 + [101.40]*20 + [101.00]*20 + [101.90]*20 +
            [99.00, 98.00, 99.50]*20,
    '2060': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.40]*20 + [101.70]*20 + [103.00]*20 + [101.60]*20 + [101.20]*20 + [102.00]*20 +
            [99.00, 98.00, 99.50]*20,
    '2070': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.20]*20 + [101.50]*20 + [102.90]*20 + [101.50]*20 + [101.10]*20 + [102.00]*20 +
            [99.00, 98.00, 99.50]*20,
    '2080': [5.00]*60 + [102.50]*60 + [102.80]*60 +
            [102.00]*20 + [101.20]*20 + [102.80]*20 + [101.20]*20 + [100.70]*20 + [101.60]*20 +
            [99.00, 98.00, 99.50]*20,
}

# Ze względu na złożoność, stworzę każdą tabelę osobno

# 1. Parametry makroekonomiczne - uproszczona wersja
parametry_1 = pd.DataFrame({
    'rok': [2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'stopa_bezrobocia': [5.00, 5.40, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00],
    'inflacja_ogolna': [113.50, 109.80, 104.80, 103.10, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50],
    'inflacja_emeryci': [113.80, 110.10, 105.10, 103.40, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80],
    'realny_wzrost_wynagrodzen': [98.00, 100.30, 103.40, 103.70, 103.50, 103.00, 102.90, 102.90, 102.90, 102.80, 102.70, 102.60, 102.50, 102.40, 102.40, 102.30, 102.20, 102.10, 102.00],
    'realny_wzrost_PKB': [104.60, 101.70, 103.10, 103.10, 102.90, 102.90, 102.90, 102.80, 102.70, 102.40, 102.00, 101.60, 101.40, 101.40, 101.60, 101.70, 101.50, 101.30, 101.20],
    'sciagalnosc_skladek': [99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00, 99.00]
})

parametry_2 = pd.DataFrame({
    'rok': [2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'stopa_bezrobocia': [5.50, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00],
    'inflacja_ogolna': [113.50, 109.80, 104.80, 103.10, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50],
    'inflacja_emeryci': [113.80, 110.10, 105.10, 103.40, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80],
    'realny_wzrost_wynagrodzen': [97.50, 99.80, 102.90, 103.00, 102.80, 102.50, 102.40, 102.40, 102.40, 102.30, 102.20, 102.10, 101.90, 101.80, 101.70, 101.60, 101.50, 101.40, 101.20],
    'realny_wzrost_PKB': [104.20, 101.40, 102.80, 102.80, 102.60, 102.50, 102.50, 102.50, 102.40, 102.00, 101.60, 101.20, 101.00, 101.00, 101.20, 101.30, 101.10, 100.80, 100.70],
    'sciagalnosc_skladek': [99.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00, 98.00]
})

parametry_3 = pd.DataFrame({
    'rok': [2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'stopa_bezrobocia': [4.80, 5.00, 4.70, 4.60, 4.40, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20, 4.20],
    'inflacja_ogolna': [113.50, 109.80, 104.80, 103.10, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50, 102.50],
    'inflacja_emeryci': [113.80, 110.10, 105.10, 103.40, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80, 102.80],
    'realny_wzrost_wynagrodzen': [98.50, 100.80, 103.70, 104.00, 103.80, 103.40, 103.40, 103.40, 103.40, 103.30, 103.20, 103.20, 103.10, 103.10, 103.00, 102.90, 102.90, 102.80, 102.80],
    'realny_wzrost_PKB': [105.00, 102.10, 103.30, 103.30, 103.20, 103.20, 103.20, 103.20, 103.10, 102.80, 102.40, 102.10, 101.90, 101.80, 102.00, 102.20, 102.00, 101.80, 101.60],
    'sciagalnosc_skladek': [99.00, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50, 99.50]
})

parametry_1.to_csv(f'{output_dir}/parametry_makroekonomiczne_wariant_1.csv', index=False)
parametry_2.to_csv(f'{output_dir}/parametry_makroekonomiczne_wariant_2.csv', index=False)
parametry_3.to_csv(f'{output_dir}/parametry_makroekonomiczne_wariant_3.csv', index=False)

# 2. Prognoza demograficzna MF 2022
demografia = pd.DataFrame({
    'rok': [2022, 2025, 2030, 2040, 2050, 2060, 2070, 2080],
    'populacja_ogolna_tys': [37915, 37419, 36604, 35273, 34121, 32543, 30575, 28249],
    'wiek_przedprodukcyjny_tys': [6905, 6673, 6035, 5221, 5255, 4853, 4339, 4229],
    'wiek_produkcyjny_tys': [22307, 21817, 21386, 19694, 16886, 15345, 14523, 13061],
    'wiek_poprodukcyjny_tys': [8703, 8929, 9184, 10358, 11981, 12345, 11713, 10960],
    'udzial_przedprodukcyjny': [18.2, 17.8, 16.5, 14.8, 15.4, 14.9, 14.2, 15.0],
    'udzial_produkcyjny': [58.8, 58.3, 58.4, 55.8, 49.5, 47.2, 47.5, 46.2],
    'udzial_poprodukcyjny': [23.0, 23.9, 25.1, 29.4, 35.1, 37.9, 38.3, 38.8]
})
demografia.to_csv(f'{output_dir}/prognoza_demograficzna_MF_2022.csv', index=False)

# 3. Saldo roczne (mln zł)
saldo = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [-74244, -95409, -108900, -118049, -125365, -131593, -136815, -141843, -144842, -146984, -153997, -165625, -194829, -231366, -258254, -261766, -230572, -200597, -214704, -272925],
    'wariant_2': [-80552, -105603, -122239, -133890, -143176, -151223, -158079, -164766, -169498, -173484, -186478, -209107, -249044, -294406, -331741, -352716, -351552, -358462, -403983, -484371],
    'wariant_3': [-68871, -87844, -99458, -106453, -111279, -115250, -118697, -121898, -122859, -123035, -122649, -120173, -131352, -151619, -158427, -128913, -40161, 64459, 130709, 159058]
})
saldo.to_csv(f'{output_dir}/saldo_roczne_mln_zl.csv', index=False)

# 4. Wpływy składkowe (mln zł)
wplywy = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [180724, 195369, 208538, 220675, 232259, 244064, 256595, 269697, 283752, 298876, 346992, 435020, 526695, 626206, 747785, 905968, 1111477, 1357832, 1637427, 1950324],
    'wariant_2': [175203, 187052, 197468, 207085, 216443, 225901, 235933, 246379, 257566, 269583, 306971, 371856, 433849, 497489, 573564, 671471, 795441, 936447, 1085709, 1242874],
    'wariant_3': [185707, 202142, 217067, 231344, 245525, 260103, 275376, 291427, 308787, 327304, 388098, 503960, 635479, 783623, 967366, 1211174, 1539638, 1950545, 2444481, 3032273]
})
wplywy.to_csv(f'{output_dir}/wplywy_skladkowe_mln_zl.csv', index=False)

# 5. Wydatki (mln zł)
wydatki = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [254968, 290778, 317438, 338724, 357625, 375657, 393410, 411540, 428594, 445860, 500990, 600645, 721523, 857572, 1006039, 1167734, 1342049, 1558429, 1852131, 2223250],
    'wariant_2': [255755, 292655, 319707, 340975, 359619, 377124, 394012, 411146, 427064, 443067, 493449, 580963, 682893, 791896, 905306, 1024187, 1146993, 1294909, 1489692, 1727245],
    'wariant_3': [254578, 289986, 316525, 337797, 356804, 375353, 394073, 413325, 431646, 450339, 510746, 624133, 766831, 935242, 1125793, 1340087, 1579799, 1886086, 2313772, 2873215]
})
wydatki.to_csv(f'{output_dir}/wydatki_funduszu_mln_zl.csv', index=False)

# 6. Wydolność systemu (%)
wydolnosc = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [71, 67, 66, 65, 65, 65, 65, 66, 66, 67, 69, 72, 73, 73, 74, 78, 83, 87, 88, 88],
    'wariant_2': [69, 64, 62, 61, 60, 60, 60, 60, 60, 61, 62, 64, 64, 63, 63, 66, 69, 72, 73, 72],
    'wariant_3': [73, 70, 69, 68, 69, 69, 70, 71, 72, 73, 76, 81, 83, 84, 86, 90, 97, 103, 106, 106]
})
wydolnosc.to_csv(f'{output_dir}/wydolnosc_systemu_proc.csv', index=False)

# 7. Liczba ubezpieczonych (tys.)
ubezpieczeni = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [16296, 16283, 16212, 16147, 16039, 15942, 15851, 15751, 15696, 15640, 15435, 14926, 14155, 13277, 12493, 11917, 11544, 11171, 10710, 10201],
    'wariant_2': [16054, 15947, 15845, 15753, 15623, 15506, 15398, 15282, 15211, 15141, 14889, 14323, 13495, 12614, 11851, 11312, 10955, 10588, 10137, 9649],
    'wariant_3': [16535, 16552, 16537, 16537, 16493, 16422, 16356, 16278, 16253, 16225, 16093, 15675, 15040, 14175, 13341, 12727, 12327, 11926, 11433, 10890]
})
ubezpieczeni.to_csv(f'{output_dir}/liczba_ubezpieczonych_tys.csv', index=False)

# 8. Liczba emerytów (tys.)
emeryci = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [6580, 6681, 6775, 6859, 6937, 6983, 7027, 7071, 7114, 7163, 7369, 7939, 8686, 9287, 9601, 9609, 9354, 9068, 8816, 8556],
    'wariant_2': [6628, 6755, 6871, 6976, 7073, 7125, 7174, 7224, 7273, 7328, 7554, 8159, 8940, 9560, 9879, 9882, 9617, 9327, 9068, 8802],
    'wariant_3': [6550, 6635, 6713, 6782, 6846, 6889, 6931, 6973, 7014, 7061, 7260, 7815, 8546, 9137, 9447, 9456, 9205, 8923, 8674, 8418]
})
emeryci.to_csv(f'{output_dir}/liczba_emerytow_tys.csv', index=False)

# 9. Współczynnik obciążenia
wspolczynnik = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [0.40, 0.41, 0.42, 0.42, 0.43, 0.44, 0.44, 0.45, 0.45, 0.46, 0.48, 0.53, 0.61, 0.70, 0.77, 0.81, 0.81, 0.81, 0.82, 0.84],
    'wariant_2': [0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.47, 0.48, 0.48, 0.51, 0.57, 0.66, 0.76, 0.83, 0.87, 0.88, 0.88, 0.89, 0.91],
    'wariant_3': [0.40, 0.40, 0.41, 0.41, 0.42, 0.42, 0.42, 0.43, 0.43, 0.44, 0.45, 0.50, 0.57, 0.64, 0.71, 0.74, 0.75, 0.75, 0.76, 0.77]
})
wspolczynnik.to_csv(f'{output_dir}/wspolczynnik_obciazenia.csv', index=False)

# 10. Saldo w % PKB
saldo_pkb = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [-2.2, -2.7, -2.9, -2.9, -2.9, -2.9, -2.9, -2.9, -2.8, -2.7, -2.4, -2.1, -2.0, -1.9, -1.8, -1.5, -1.1, -0.7, -0.7, -0.7],
    'wariant_2': [-2.4, -3.0, -3.2, -3.4, -3.4, -3.5, -3.4, -3.4, -3.3, -3.3, -3.1, -2.8, -2.7, -2.7, -2.6, -2.3, -1.9, -1.6, -1.5, -1.6],
    'wariant_3': [-2.1, -2.4, -2.6, -2.6, -2.6, -2.5, -2.5, -2.4, -2.3, -2.2, -1.8, -1.4, -1.2, -1.1, -0.9, -0.6, -0.2, 0.2, 0.3, 0.3]
})
saldo_pkb.to_csv(f'{output_dir}/saldo_proc_PKB.csv', index=False)

# 11. Wpływy w % PKB
wplywy_pkb = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [5.4, 5.5, 5.5, 5.5, 5.5, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.3, 5.2, 5.1, 5.1, 5.1, 5.1, 5.0, 5.0],
    'wariant_2': [5.3, 5.3, 5.2, 5.2, 5.2, 5.2, 5.1, 5.1, 5.1, 5.1, 5.0, 4.9, 4.8, 4.6, 4.4, 4.3, 4.3, 4.2, 4.1, 4.0],
    'wariant_3': [5.6, 5.6, 5.6, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.8, 5.9, 5.8, 5.8, 5.8, 5.8, 5.9, 5.9, 6.0, 6.0]
})
wplywy_pkb.to_csv(f'{output_dir}/wplywy_proc_PKB.csv', index=False)

# 12. Wydatki w % PKB
wydatki_pkb = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065,
2070, 2075, 2080],
    'wariant_1': [7.7, 8.1, 8.3, 8.4, 8.4, 8.4, 8.3, 8.3, 8.2, 8.1, 7.8, 7.5, 7.3, 7.1, 6.9, 6.5, 6.1, 5.8, 5.7, 5.7],
    'wariant_2': [7.8, 8.3, 8.5, 8.6, 8.6, 8.6, 8.6, 8.5, 8.4, 8.3, 8.1, 7.7, 7.5, 7.3, 7.0, 6.6, 6.2, 5.8, 5.6, 5.6],
    'wariant_3': [7.6, 8.0, 8.2, 8.3, 8.2, 8.2, 8.1, 8.1, 8.0, 7.9, 7.6, 7.3, 7.1, 6.9, 6.7, 6.4, 6.0, 5.7, 5.7, 5.7]
})
wydatki_pkb.to_csv(f'{output_dir}/wydatki_proc_PKB.csv', index=False)

# 13. Saldo zdyskontowane inflacją (mln zł)
saldo_zdysk = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [-59575, -73052, -80874, -85530, -88616, -90749, -92049, -93104, -92754, -91830, -89342, -84928, -88299, -92680, -91435, -81914, -63773, -49038, -46391, -52121],
    'wariant_2': [-64637, -80857, -90780, -97008, -101206, -104287, -106356, -108151, -108544, -108386, -108186, -107224, -112871, -117932, -117453, -110375, -97234, -87630, -87287, -92501],
    'wariant_3': [-55263, -67260, -73862, -77129, -78659, -79479, -79859, -80013, -78677, -76867, -71155, -61621, -59531, -60735, -56091, -40341, -11108, 15758, 28242, 30376]
})
saldo_zdysk.to_csv(f'{output_dir}/saldo_zdyskontowane_2021_mln_zl.csv', index=False)

# 14. Wpływy zdyskontowane (mln zł)
wplywy_zdysk = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [145016, 149587, 154870, 159886, 164175, 168311, 172637, 177027, 181710, 186727, 201309, 223066, 238706, 250843, 264754, 283504, 307417, 331936, 353794, 372457],
    'wariant_2': [140586, 143220, 146649, 150040, 152995, 155786, 158736, 161721, 164940, 168425, 178090, 190677, 196627, 199282, 203071, 210123, 220006, 228924, 234586, 237354],
    'wariant_3': [149015, 154773, 161204, 167616, 173552, 179373, 185273, 191290, 197741, 204487, 225157, 258416, 288009, 313901, 342497, 379012, 425840, 476830, 528172, 579079]
})
wplywy_zdysk.to_csv(f'{output_dir}/wplywy_zdyskontowane_2021_mln_zl.csv', index=False)

# 15. Wydatki zdyskontowane (mln zł)
wydatki_zdysk = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [204591, 222639, 235744, 245416, 252791, 259061, 264686, 270131, 274463, 278557, 290651, 307993, 327005, 343523, 356189, 365418, 371190, 380974, 400185, 424578],
    'wariant_2': [205223, 224077, 237429, 247048, 254201, 260073, 265092, 269872, 273484, 276811, 286276, 297901, 309498, 317215, 320524, 320498, 317240, 316553, 321873, 329855],
    'wariant_3': [204278, 222033, 235066, 244745, 252211, 258851, 265133, 271303, 276418, 281355, 296312, 320037, 347539, 374636, 398588, 419353, 436947, 461073, 499930, 548703]
})
wydatki_zdysk.to_csv(f'{output_dir}/wydatki_zdyskontowane_2021_mln_zl.csv', index=False)

# 16. Saldo jako % sumy podstaw wymiaru składek
saldo_podstawy = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [-7.90, -9.39, -10.05, -10.32, -10.43, -10.45, -10.36, -10.25, -9.97, -9.63, -8.73, -7.48, -7.17, -7.06, -6.56, -5.48, -3.94, -2.80, -2.49, -2.65],
    'wariant_2': [-8.75, -10.76, -11.81, -12.35, -12.67, -12.86, -12.91, -12.92, -12.74, -12.49, -11.85, -10.95, -11.03, -11.20, -10.87, -9.86, -8.30, -7.19, -6.99, -7.32],
    'wariant_3': [-7.16, -8.40, -8.86, -8.92, -8.80, -8.63, -8.41, -8.18, -7.80, -7.39, -6.24, -4.70, -4.03, -3.72, -3.13, -2.03, -0.50, 0.63, 1.02, 1.00]
})
saldo_podstawy.to_csv(f'{output_dir}/saldo_proc_podstaw_skladek.csv', index=False)

# 17. Wpływy jako % sumy podstaw wymiaru składek
wplywy_podstawy = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [19.23, 19.24, 19.25, 19.29, 19.33, 19.38, 19.43, 19.48, 19.53, 19.57, 19.67, 19.64, 19.40, 19.12, 18.99, 18.97, 18.97, 18.97, 18.97, 18.97],
    'wariant_2': [19.04, 19.05, 19.07, 19.11, 19.15, 19.21, 19.26, 19.31, 19.36, 19.41, 19.51, 19.47, 19.22, 18.93, 18.80, 18.78, 18.78, 18.78, 18.78, 18.78],
    'wariant_3': [19.32, 19.33, 19.34, 19.38, 19.42, 19.47, 19.52, 19.57, 19.61, 19.66, 19.75, 19.72, 19.48, 19.21, 19.09, 19.07, 19.07, 19.07, 19.07, 19.07]
})
wplywy_podstawy.to_csv(f'{output_dir}/wplywy_proc_podstaw_skladek.csv', index=False)

# 18. Wydatki jako % sumy podstaw wymiaru składek
wydatki_podstawy = pd.DataFrame({
    'rok': [2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2040, 2045, 2050, 2055, 2060, 2065, 2070, 2075, 2080],
    'wariant_1': [27.12, 28.63, 29.31, 29.60, 29.76, 29.83, 29.80, 29.73, 29.50, 29.20, 28.40, 27.12, 26.57, 26.19, 25.55, 24.45, 22.91, 21.78, 21.46, 21.63],
    'wariant_2': [27.79, 29.81, 30.88, 31.46, 31.82, 32.07, 32.17, 32.23, 32.11, 31.90, 31.36, 30.43, 30.25, 30.14, 29.67, 28.64, 27.08, 25.97, 25.77, 26.10],
    'wariant_3': [26.48, 27.72, 28.21, 28.29, 28.22, 28.09, 27.93, 27.75, 27.42, 27.04, 25.99, 24.42, 23.51, 22.93, 22.21, 21.10, 19.57, 18.44, 18.05, 18.07]
})
wydatki_podstawy.to_csv(f'{output_dir}/wydatki_proc_podstaw_skladek.csv', index=False)

# 19. Prognoza demograficzna MF 2019 (dla porównania)
demografia_2019 = pd.DataFrame({
    'rok': [2022, 2025, 2030, 2040, 2050, 2060, 2070, 2080],
    'populacja_ogolna': [38303, 38132, 37712, 36505, 35243, 33926, 32213, 30333],
    'przedprodukcyjny': [6994, 6918, 6554, 6010, 5906, 5793, 5444, 5341],
    'produkcyjny': [22345, 21849, 21384, 19662, 17261, 15989, 15552, 14825],
    'poprodukcyjny': [8964, 9366, 9774, 10834, 12075, 12144, 11217, 10167]
})
demografia_2019.to_csv(f'{output_dir}/prognoza_demograficzna_MF_2019.csv', index=False)

# 20. Analiza wrażliwości - wpływy (% zmiana)
wrazliwosc_wplywy = pd.DataFrame({
    'zmiana_parametru': [
        'stopa_inflacji_+1pp', 'stopa_inflacji_-1pp',
        'stopa_bezrobocia_+1pp', 'stopa_bezrobocia_-1pp',
        'realny_wzrost_wynagrodzen_+1pp', 'realny_wzrost_wynagrodzen_-1pp',
        'sciagalnosc_skladek_+1pp', 'sciagalnosc_skladek_-1pp',
        'realna_stopa_zwrotu_OFE_+1pp', 'realna_stopa_zwrotu_OFE_-1pp',
        'waloryzacja_+1pp', 'waloryzacja_-1pp',
        'prognoza_demograficzna_MF_2019'
    ],
    '2023': [0.0, 0.0, -1.0, 1.0, 2.0, -1.9, 1.0, -1.0, 0.1, -0.1, 0.0, 0.0, 0.2],
    '2025': [0.0, 0.0, -1.0, 1.0, 3.9, -3.8, 1.0, -1.0, 0.1, -0.1, 0.0, 0.0, 0.2],
    '2030': [-0.1, 0.1, -1.0, 1.0, 8.8, -8.1, 1.0, -1.0, 0.4, -0.3, 0.0, 0.0, 0.2],
    '2035': [0.0, 0.0, -1.0, 1.0, 14.0, -12.3, 1.0, -1.0, 0.6, -0.5, 0.0, 0.0, -0.2],
    '2040': [0.0, 0.0, -1.0, 1.0, 19.6, -16.5, 1.0, -1.0, 0.6, -0.5, 0.0, 0.0, -0.6],
    '2045': [0.0, 0.0, -1.0, 1.0, 25.7, -20.6, 1.0, -1.0, 0.5, -0.4, 0.0, 0.0, -0.2],
    '2050': [0.0, 0.0, -1.0, 1.0, 32.3, -24.6, 1.0, -1.0, 0.2, -0.2, 0.0, 0.0, 0.9],
    '2055': [0.0, 0.0, -1.0, 1.0, 39.0, -28.3, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 2.2],
    '2060': [0.0, 0.0, -1.0, 1.0, 46.0, -31.8, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 3.2],
    '2070': [0.0, 0.0, -1.0, 1.0, 60.9, -38.1, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 5.5],
    '2080': [0.0, 0.0, -1.0, 1.0, 77.4, -43.9, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 10.5]
})
wrazliwosc_wplywy.to_csv(f'{output_dir}/analiza_wrazliwosci_wplywy_proc.csv', index=False)

# 21. Analiza wrażliwości - wydatki (% zmiana)
wrazliwosc_wydatki = pd.DataFrame({
    'zmiana_parametru': [
        'stopa_inflacji_+1pp', 'stopa_inflacji_-1pp',
        'stopa_bezrobocia_+1pp', 'stopa_bezrobocia_-1pp',
        'realny_wzrost_wynagrodzen_+1pp', 'realny_wzrost_wynagrodzen_-1pp',
        'sciagalnosc_skladek_+1pp', 'sciagalnosc_skladek_-1pp',
        'realna_stopa_zwrotu_OFE_+1pp', 'realna_stopa_zwrotu_OFE_-1pp',
        'waloryzacja_+1pp', 'waloryzacja_-1pp',
        'prognoza_demograficzna_MF_2019'
    ],
    '2023': [-1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7, -0.7, -0.8],
    '2025': [-1.0, 1.1, -0.1, 0.1, 0.5, -0.4, 0.0, 0.0, 0.0, 0.0, 2.4, -2.3, -0.6],
    '2030': [-1.0, 1.0, -0.1, 0.1, 2.3, -2.1, 0.0, 0.0, 0.0, 0.0, 6.2, -5.9, -0.1],
    '2035': [-1.0, 1.0, -0.2, 0.2, 4.6, -4.2, 0.0, 0.0, 0.1, -0.1, 9.5, -8.6, 0.0],
    '2040': [-1.0, 1.0, -0.3, 0.3, 7.4, -6.6, 0.0, 0.0, 0.2, -0.1, 11.8, -10.4, -0.6],
    '2045': [-0.9, 1.0, -0.4, 0.4, 10.8, -9.4, 0.0, 0.0, 0.3, -0.2, 13.4, -11.4, -1.6],
    '2050': [-0.9, 0.9, -0.4, 0.4, 14.8, -12.4, 0.0, 0.0, 0.4, -0.3, 14.3, -12.0, -2.0],
    '2055': [-0.9, 0.9, -0.5, 0.5, 19.2, -15.5, 0.0, 0.0, 0.4, -0.3, 15.0, -12.4, -2.0],
    '2060': [-0.9, 0.9, -0.5, 0.5, 23.8, -18.5, 0.0, 0.0, 0.4, -0.3, 15.8, -13.0, -1.9],
    '2070': [-0.8, 0.8, -0.6, 0.7, 34.7, -24.9, 0.0, 0.0, 0.2, -0.2, 17.1, -13.9, -2.0],
    '2080': [-0.7, 0.7, -0.8, 0.8, 49.0, -32.0, 0.0, 0.0, 0.1, -0.1, 16.6, -13.4, -1.7]
})
wrazliwosc_wydatki.to_csv(f'{output_dir}/analiza_wrazliwosci_wydatki_proc.csv', index=False)

# 22. Analiza wrażliwości - zmiana salda (mld zł)
wrazliwosc_saldo = pd.DataFrame({
    'zmiana_parametru': [
        'stopa_inflacji_+1pp', 'stopa_inflacji_-1pp',
        'stopa_bezrobocia_+1pp', 'stopa_bezrobocia_-1pp',
        'realny_wzrost_wynagrodzen_+1pp', 'realny_wzrost_wynagrodzen_-1pp',
        'sciagalnosc_skladek_+1pp', 'sciagalnosc_skladek_-1pp',
        'realna_stopa_zwrotu_OFE_+1pp', 'realna_stopa_zwrotu_OFE_-1pp',
        'waloryzacja_+1pp', 'waloryzacja_-1pp',
        'prognoza_demograficzna_MF_2019'
    ],
    '2023': [2.0, -2.0, -1.4, 1.4, 2.8, -2.8, 1.4, -1.4, 0.1, -0.1, -1.4, 1.4, 1.8],
    '2025': [2.4, -2.4, -1.4, 1.4, 4.8, -4.9, 1.5, -1.5, 0.2, -0.2, -5.6, 5.5, 1.7],
    '2030': [2.6, -2.7, -1.3, 1.3, 9.3, -8.7, 1.7, -1.7, 0.6, -0.6, -16.8, 15.8, 0.6],
    '2035': [2.8, -2.8, -1.3, 1.3, 14.9, -12.6, 2.0, -2.0, 1.0, -0.9, -27.5, 24.9, -0.6],
    '2040': [2.9, -3.0, -1.3, 1.3, 20.9, -16.3, 2.2, -2.2, 1.0, -0.8, -36.4, 31.9, 0.4],
    '2045': [3.0, -3.1, -1.2, 1.1, 26.0, -18.4, 2.4, -2.4, 0.3, -0.2, -43.7, 37.3, 4.6],
    '2050': [3.1, -3.2, -1.0, 1.0, 30.1, -19.0, 2.6, -2.6, -0.7, 0.7, -49.0, 41.1, 9.2],
    '2055': [3.1, -3.3, -0.9, 0.8, 35.0, -19.7, 2.7, -2.7, -1.2, 1.1, -53.4, 44.3, 13.0],
    '2060': [3.1, -3.2, -0.8, 0.8, 43.3, -22.3, 2.9, -2.9, -1.3, 1.1, -57.8, 47.6, 15.9],
    '2070': [3.1, -3.1, -0.8, 0.8, 69.9, -31.8, 3.4, -3.4, -0.8, 0.7, -65.2, 52.9, 25.9],
    '2080': [3.1, -3.1, -0.4, 0.4, 80.2, -27.9, 3.8, -3.8, -0.3, 0.2, -70.4, 56.8, 46.1]
})
wrazliwosc_saldo.to_csv(f'{output_dir}/analiza_wrazliwosci_saldo_mld_zl.csv', index=False)

# 23. Wpływ współczynników śmiertelności
smiertelnosc = pd.DataFrame({
    'zmiana_wspolczynnikow': ['wzrost_o_5proc']*3 + ['spadek_o_5proc']*3,
    'typ': ['wplywy_proc', 'wydatki_proc', 'saldo_mld_zl']*2,
    '2023': [0.0, -0.1, 0.1, 0.0, 0.1, -0.1],
    '2025': [-0.1, -0.2, 0.4, 0.1, 0.2, -0.4],
    '2030': [-0.2, -0.5, 1.0, 0.2, 0.5, -1.0],
    '2035': [-0.2, -0.7, 1.6, 0.2, 0.7, -1.7],
    '2040': [-0.2, -0.8, 2.0, 0.2, 0.9, -2.1],
    '2045': [-0.2, -0.9, 2.2, 0.2, 0.9, -2.4],
    '2050': [-0.2, -0.8, 2.2, 0.2, 0.9, -2.4],
    '2055': [-0.2, -0.7, 2.1, 0.2, 0.8, -2.2],
    '2060': [-0.2, -0.7, 2.0, 0.2, 0.7, -2.1],
    '2070': [-0.2, -0.7, 2.1, 0.2, 0.7, -2.2],
    '2080': [-0.1, -0.6, 1.9, 0.1, 0.6, -1.9]
})
smiertelnosc.to_csv(f'{output_dir}/analiza_smiertelnosci.csv', index=False)

print(f"Wszystkie {23} pliki CSV zostały utworzone w folderze '{output_dir}/'")
print("\nLista utworzonych plików:")
for i, filename in enumerate(sorted(os.listdir(output_dir)), 1):
    print(f"{i}. {filename}")

